# This is a basic workflow to help you get started with Actions

name: CI - Releases and Main

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
    tags:
      - "[2-9][0-9][0-9][0-9].[0-9]+-rev[0-9]+"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout Source
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Verify Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17
    - name: Execute Gradle Build
      uses: eskatos/gradle-command-action@v2
      with:
        # Gradle command line arguments, see gradle --help
        gradle-version: 7.5.1
        arguments: buildDocs

    # do the following two things only for a release!
    - name: Set Environment Variables for Release Version
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV
    - name: Prepare Deployment
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        rm -rf ./build/tmp
        cp ./docs-ext/curriculum-*.pdf ./build 2>/dev/null || :
        zip -r release.zip ./build
        mkdir release_dir
        cp ./build/curriculum-*.pdf ./release_dir 2>/dev/null || :
        mv release.zip ./release_dir/release-${{ env.RELEASE_VERSION }}.zip
    - name: Create New Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create-release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag: ${{ env.RELEASE_VERSION }}
        name: Release ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false
        bodyFile: "CHANGELOG.md"
        artifacts: "LICENSE.adoc,release_dir/*.pdf,release_dir/*.zip"
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Deploy
      if: startsWith(github.ref, 'refs/tags/')
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: Publish Release ${{ env.RELEASE_VERSION }}
