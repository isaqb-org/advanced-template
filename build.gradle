import org.asciidoctor.gradle.jvm.AsciidoctorTask

import java.text.SimpleDateFormat

buildscript {
    allprojects {
        repositories {
            mavenCentral()
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }
    }
    dependencies {
        classpath 'org.jruby:jruby-complete:9.2.19.0'
        classpath 'org.asciidoctor:asciidoctorj:2.5.1'
        classpath "org.asciidoctor:asciidoctorj-pdf:1.6.0"
    }
}

plugins {
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

ext {
    today = new Date()
    versionDate = new SimpleDateFormat("yyyyMMdd").format(today)

    project.version = project.file("./document.version").text
    curriculumFileName = "curriculum-template"
    addSuffixToCurriculum = { suffix ->
        for (extension in ["html", "pdf"]) {
            File source = new File("${buildDir}/${curriculumFileName}.${extension}")
            File target = new File("${buildDir}/${curriculumFileName}${suffix}.${extension}")

            source.renameTo(target)
        }
    }
}




class RenderCurriculumTask extends AsciidoctorTask {
    @Inject
    RenderCurriculumTask(WorkerExecutor worker, String curriculumFileName, String versionDate, String language, boolean withRemarks) {
        super(worker)

//        inProcess = org.asciidoctor.gradle.base.process.ProcessMode.JAVA_EXEC

        forkOptions {
            jvmArgs "--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED", "--add-opens", "java.base/java.io=ALL-UNNAMED"
        }

        sourceDir = new File("./docs/")
        sources {
            include "index.adoc"
            include "${curriculumFileName}.adoc"
        }
        outputDir = new File("./build/")
        outputOptions {
            separateOutputDirs = false
            backends 'pdf', 'html5'
        }
        def fileVersion = project.version.trim() + "-" + language

    def fileVersion = project.version.trim() + "-" + language

    attributes = [
      'icons'             : 'font',
      'version-label'     : '',
      'revnumber'         : fileVersion,
      'revdate'           : versionDate,
      'document-version'  : fileVersion + "-" + versionDate,
      'currentDate'       : versionDate,
      'language'          : language,
      'withRemarks'       : withRemarks,
      'curriculumFileName': curriculumFileName,
      'debug_adoc'        : false,
      'pdf-stylesdir'     : '../pdf-theme/themes',
      'pdf-fontsdir'      : '../pdf-theme/fonts',
      'pdf-style'         : 'isaqb',
      'stylesheet'        : '../html-theme/adoc-github.css',
      'stylesheet-dir'    : '../html-theme'
    ]
  }
}

task buildDocs {
    group 'Documentation'
    description 'Grouping task for generating all languages in several formats'
    dependsOn "includeLearningObjectives", "renderNoRemarksDE", "renderNoRemarksEN"
}

task renderNoRemarksDE(type: RenderCurriculumTask,
        constructorArgs: [curriculumFileName, versionDate, "DE", false]) {
    doLast {
        addSuffixToCurriculum("-de")
    }
}

task renderWithRemarksDE(type: RenderCurriculumTask,
        constructorArgs: [curriculumFileName, versionDate, "DE", true]) {
    doLast {
        addSuffixToCurriculum("-remarks-de")
    }
}

task renderNoRemarksEN(type: RenderCurriculumTask,
        constructorArgs: [curriculumFileName, versionDate, "EN", false]) {
    doLast {
        addSuffixToCurriculum("-en")
    }
}

task renderWithRemarksEN(type: RenderCurriculumTask,
        constructorArgs: [curriculumFileName, versionDate, "EN", true]) {
    doLast {
        addSuffixToCurriculum("-remarks-en")
    }
}

apply from: 'scripts/includeLearningObjectives.gradle'

defaultTasks "buildDocs"
